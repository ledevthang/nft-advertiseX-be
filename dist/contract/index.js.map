{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/contract/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+BAUc;AAEd,MAAM,OAAQ,SAAQ,IAAA,aAAM,EAAC;IAC3B,SAAS,EAAE,gBAAS;IACpB,MAAM,EAAE,aAAM;CACf,CAAC;CAAG;AACL,MAAa,oBAAqB,SAAQ,oBAAa;IAAvD;;QACoB,YAAO,GAAG,IAAA,YAAK,GAAa,CAAC;QAC7B,UAAK,GAAG,IAAA,YAAK,GAAa,CAAC;QAEpC,WAAM,GAAG;YAChB,cAAc,EAAE,OAAO;YACvB,QAAQ,EAAE,OAAO;SAClB,CAAC;IA2CJ,CAAC;IAzCS,SAAS,CAAC,QAAmB;QACnC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAEQ,IAAI;QACX,KAAK,CAAC,IAAI,EAAE,CAAC;IACf,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5D,CAAC;IAEO,aAAa,CAAC,MAAc;QAClC,IAAI,MAAM,GAAG,oBAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;QAGlC,IAAI,CAAC,SAAS,CACZ,gBAAgB,EAChB,IAAI,OAAO,CAAC;YACV,SAAS,EAAE,IAAI,CAAC,MAAM;YACtB,MAAM,EAAE,MAAM;SACf,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,QAAQ,CAAC,MAAc;QAC7B,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QAGvC,IAAI,CAAC,SAAS,CACZ,UAAU,EACV,IAAI,OAAO,CAAC;YACV,SAAS,EAAE,IAAI,CAAC,MAAM;YACtB,MAAM,EAAE,MAAM;SACf,CAAC,CACH,CAAC;IACJ,CAAC;CACF;AAlDD,oDAkDC;AAjDmB;IAAjB,IAAA,YAAK,EAAC,gBAAS,CAAC;;qDAA8B;AAC7B;IAAjB,IAAA,YAAK,EAAC,gBAAS,CAAC;;mDAA4B;AAOrC;IAAP,aAAM;;qCAAqB,gBAAS;;qDAGpC;AAUO;IAAP,aAAM;;qCAAuB,aAAM;;yDAYnC;AAEO;IAAP,aAAM;;qCAAkB,aAAM;;oDAa9B","sourcesContent":["import {\n  AccountUpdate,\n  MerkleWitness,\n  PublicKey,\n  SmartContract,\n  State,\n  Struct,\n  UInt64,\n  method,\n  state,\n} from \"o1js\";\n\nclass Account extends Struct({\n  publicKey: PublicKey,\n  points: UInt64,\n}) {}\nexport class AdvertiseXTokenSales extends SmartContract {\n  @state(PublicKey) tokenPk = State<PublicKey>();\n  @state(PublicKey) owner = State<PublicKey>();\n\n  override events = {\n    paymentCreated: Account,\n    withDraw: Account,\n  };\n\n  @method initState(_tokenPk: PublicKey) {\n    this.tokenPk.set(_tokenPk);\n    this.owner.set(this.sender);\n  }\n\n  override init() {\n    super.init();\n  }\n\n  onlyOwner() {\n    this.owner.getAndAssertEquals().assertEquals(this.sender);\n  }\n\n  @method createPayment(amount: UInt64) {\n    let sender = AccountUpdate.createSigned(this.sender);\n    sender.send({ to: this, amount });\n\n    //emit event\n    this.emitEvent(\n      \"paymentCreated\",\n      new Account({\n        publicKey: this.sender,\n        points: amount,\n      }),\n    );\n  }\n\n  @method withDraw(amount: UInt64) {\n    this.onlyOwner();\n\n    this.send({ to: this.sender, amount });\n\n    //emit event\n    this.emitEvent(\n      \"withDraw\",\n      new Account({\n        publicKey: this.sender,\n        points: amount,\n      }),\n    );\n  }\n}\n"]}