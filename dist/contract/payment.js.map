{"version":3,"file":"payment.js","sourceRoot":"","sources":["../../src/contract/payment.ts"],"names":[],"mappings":";;;AAAA,+BAA2D;AAC3D,wBAAyC;AAEzC,MAAM,OAAO,GAAG,WAAI,CAAC,OAAO,CAAC,iDAAiD,CAAC,CAAC;AAChF,WAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAEhC,IAAI,SAAS,GAAG,iBAAU,CAAC,UAAU,CACnC,sDAAsD,CACvD,CAAC;AACF,IAAI,aAAa,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;AAE5C,MAAM,cAAc,GAAG,iBAAU,CAAC,UAAU,CAC1C,sDAAsD,CACvD,CAAC;AACF,MAAM,KAAK,GAAG,IAAI,uBAAoB,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,CAAC;AAE9D,KAAK,UAAU,aAAa,CAAC,MAAc;IAChD,MAAM,uBAAoB,CAAC,OAAO,EAAE,CAAC;IAErC,MAAM,EAAE,GAAG,MAAM,WAAI,CAAC,WAAW,CAC/B,EAAE,MAAM,EAAE,aAAa,EAAE,GAAG,EAAE,SAAS,EAAE,EACzC,GAAG,EAAE;QACH,KAAK,CAAC,aAAa,CAAC,aAAM,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC;IACjD,CAAC,CACF,CAAC;IACF,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;IACjB,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IAGrB,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC;IAC/B,MAAM,MAAM,CAAC,QAAQ,EAAE,CAAC;IAExB,OAAO,MAAM,CAAC;AAChB,CAAC;AAjBD,sCAiBC;AAEM,KAAK,UAAU,QAAQ;IAC5B,MAAM,uBAAoB,CAAC,OAAO,EAAE,CAAC;IAErC,MAAM,EAAE,GAAG,MAAM,WAAI,CAAC,WAAW,CAC/B,EAAE,MAAM,EAAE,aAAa,EAAE,GAAG,EAAE,SAAS,EAAE,EACzC,GAAG,EAAE;QACH,KAAK,CAAC,QAAQ,CAAC,aAAM,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IACzC,CAAC,CACF,CAAC;IACF,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;IACjB,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IAGrB,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC;IAC/B,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,QAAQ,EAAE,CAAC;IACzC,OAAO,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;IACxB,OAAO,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC5B,CAAC;AAjBD,4BAiBC","sourcesContent":["import { Mina, PublicKey, PrivateKey, UInt64 } from \"o1js\";\nimport { AdvertiseXTokenSales } from \".\";\n// set Mina instance\nconst Network = Mina.Network(\"https://proxy.berkeley.minaexplorer.com/graphql\");\nMina.setActiveInstance(Network);\n\nlet senderKey = PrivateKey.fromBase58(\n  \"EKDpZSBnfpJijCwgLPmZnKVnHDe5svMFFHYR4jHTHBAbPPCnuYHH\", // my wallet address\n);\nlet senderAccount = senderKey.toPublicKey();\n\nconst zkAppPublicKey = PrivateKey.fromBase58(\n  \"EKEop2zppg1z4F2zzyVe1zo2vtysXoN66rsmqYJjKBsoxyr8ctN9\", //contract address\n);\nconst zkapp = new AdvertiseXTokenSales(zkAppPublicKey.toPublicKey());\n\nexport async function createPayment(amount: number) {\n  await AdvertiseXTokenSales.compile();\n  // create the transaction, add proofs and signatures\n  const tx = await Mina.transaction(\n    { sender: senderAccount, fee: 100000000 },\n    () => {\n      zkapp.createPayment(UInt64.from(amount * 1e9));\n    },\n  );\n  await tx.prove();\n  tx.sign([senderKey]);\n\n  // send transaction\n  const result = await tx.send();\n  await result.safeWait();\n\n  return result;\n}\n\nexport async function withDraw() {\n  await AdvertiseXTokenSales.compile();\n  // create the transaction, add proofs and signatures\n  const tx = await Mina.transaction(\n    { sender: senderAccount, fee: 100000000 },\n    () => {\n      zkapp.withDraw(UInt64.from(0.1 * 1e9));\n    },\n  );\n  await tx.prove();\n  tx.sign([senderKey]);\n\n  // send transaction\n  const result = await tx.send();\n  const safeWait = await result.safeWait();\n  console.log({ result });\n  console.log({ safeWait });\n}\n// withDraw().then()\n"]}