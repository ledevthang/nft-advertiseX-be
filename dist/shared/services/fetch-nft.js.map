{"version":3,"file":"fetch-nft.js","sourceRoot":"","sources":["../../../src/shared/services/fetch-nft.ts"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAoBnB,MAAM,QAAQ,GAAG,CAAC,EACvB,YAAY,EACZ,OAAO,EACP,KAAK,GAAG,UAAU,GACH,EAAE,EAAE,CACnB,eAAK;KACF,GAAG,CACF,uCAAuC,KAAK,aAAa,YAAY,SAAS,OAAO,EAAE,EACvF;IACE,OAAO,EAAE;QACP,WAAW,EAAE,kCAAkC;KAChD;CACF,CACF;KACA,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAdpB,QAAA,QAAQ,YAcY","sourcesContent":["import axios from \"axios\";\n\ntype FetchNftParams = {\n  tokenAddress: string;\n  tokenId: string;\n  chain?: string;\n};\n\ntype NftResponse = {\n  nft: {\n    identifier: string;\n    contract: string;\n    image_url: string;\n    name: string;\n    description?: string;\n    animation_url?: string;\n    opensea_url?: string;\n  };\n};\n\nexport const fetchNft = ({\n  tokenAddress,\n  tokenId,\n  chain = \"ethereum\",\n}: FetchNftParams) =>\n  axios\n    .get<NftResponse>(\n      `https://api.opensea.io/api/v2/chain/${chain}/contract/${tokenAddress}/nfts/${tokenId}`,\n      {\n        headers: {\n          \"x-api-key\": \"a4a7a4419218412f878d0b2b9112cc3c\",\n        },\n      },\n    )\n    .then((res) => res.data.nft);\n"]}